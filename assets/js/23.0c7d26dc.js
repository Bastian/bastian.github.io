(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{391:function(a,t,e){"use strict";e.r(t);var s=e(43),n=Object(s.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"lambdas"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lambdas"}},[a._v("#")]),a._v(" Lambdas")]),a._v(" "),e("p",[a._v("As Javacord heavily benefits from "),e("a",{attrs:{href:"https://docs.oracle.com/javase/tutorial/java/javaOO/lambdaexpressions.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("lambda expressions"),e("OutboundLink")],1),a._v(", this introduction gives you a quick overview, if you are not familiar with lambdas. Lambdas are used as a short form of "),e("a",{attrs:{href:"https://docs.oracle.com/javase/8/docs/api/java/lang/FunctionalInterface.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("functional interface"),e("OutboundLink")],1),a._v(" implementations.\nFunctional interfaces, are basically just interfaces with a single method definition. All listeners in Javacord, for example, are functional interfaces and look like this internally (simplified):")]),a._v(" "),e("div",{staticClass:"language-java extra-class"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/**\n * This listener listens to message creations.\n */")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@FunctionalInterface")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("interface")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("MessageCreateListener")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/**\n     * This method is called every time a message is created.\n     *\n     * @param event The event.\n     */")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("onMessageCreate")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("MessageCreateEvent")]),a._v(" event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),e("p",[a._v("Before Java 8, you would have implemented this kind of listener as an "),e("a",{attrs:{href:"https://docs.oracle.com/javase/tutorial/java/javaOO/anonymousclasses.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("anonymous class"),e("OutboundLink")],1),a._v(", which would look like this:")]),a._v(" "),e("div",{staticClass:"language-java extra-class"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[a._v("api"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("addMessageCreateListener")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("MessageCreateListener")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Override")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("onMessageCreate")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("MessageCreateEvent")]),a._v(" event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Do stuff")]),a._v("\n        event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("deleteMessage")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),e("p",[a._v("In Java 8, this can be replaced with a lambda expression, which does exactly the same thing, but shortens your code. The method parameter (in this case "),e("code",[a._v("event")]),a._v(") is written in front of the "),e("code",[a._v("->")]),a._v(" arrow, and the method body is written after it.")]),a._v(" "),e("div",{staticClass:"language-java extra-class"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[a._v("api"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("addMessageCreateListener")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("event "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("->")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Do stuff")]),a._v("\n    event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("deleteMessage")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[a._v("TIP")]),a._v(" "),e("p",[a._v("If the method has more than one parameter, it would look like this: "),e("code",[a._v("(param1, param2) -> { ... }")])])]),a._v(" "),e("p",[a._v("There's even a shorter version: if you are only executing one statement, you can get rid of the "),e("code",[a._v("{ }")]),a._v(" brackets as well:")]),a._v(" "),e("div",{staticClass:"language-java extra-class"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[a._v("api"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("addMessageCreateListener")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("event "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("->")]),a._v(" event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("deleteMessage")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),e("p",[a._v('However, the above method can be shortened even more, by replacing the lambda expression with a so called "'),e("a",{attrs:{href:"https://docs.oracle.com/javase/tutorial/java/javaOO/methodreferences.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("method reference"),e("OutboundLink")],1),a._v('".')]),a._v(" "),e("div",{staticClass:"language-java extra-class"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[a._v("api"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("addMessageCreateListener")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("MessageEvent")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("::")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("deleteMessage")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),e("p",[a._v("There are also plenty classes in Java 8, which benefit from lambda expressions. One example would be the Optional class, which is explained "),e("RouterLink",{attrs:{to:"/wiki/essential-knowledge/working-with-optionals/"}},[a._v("here")]),a._v(".")],1)])}),[],!1,null,null,null);t.default=n.exports}}]);